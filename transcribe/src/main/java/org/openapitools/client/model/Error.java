/*
 * Speech Services API version 3.2
 * Speech Services API version 3.2.
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ErrorCode;
import org.openapitools.client.model.InnerError;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * New format which conforms to the new Cognitive Services API guidelines which is available at https://microsoft.sharepoint.com/%3Aw%3A/t/CognitiveServicesPMO/EUoytcrjuJdKpeOKIK_QRC8BPtUYQpKBi8JsWyeDMRsWlQ?e&#x3D;CPq8ow.  This contains an outer error with error code, message, details, target and an inner error with more descriptive details.
 */
@JsonPropertyOrder({
  Error.JSON_PROPERTY_CODE,
  Error.JSON_PROPERTY_DETAILS,
  Error.JSON_PROPERTY_MESSAGE,
  Error.JSON_PROPERTY_TARGET,
  Error.JSON_PROPERTY_INNER_ERROR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-03T10:07:46.057250+01:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class Error {
  public static final String JSON_PROPERTY_CODE = "code";
  @javax.annotation.Nullable
  private ErrorCode code;

  public static final String JSON_PROPERTY_DETAILS = "details";
  @javax.annotation.Nullable
  private List<Error> details = new ArrayList<>();

  public static final String JSON_PROPERTY_MESSAGE = "message";
  @javax.annotation.Nullable
  private String message;

  public static final String JSON_PROPERTY_TARGET = "target";
  @javax.annotation.Nullable
  private String target;

  public static final String JSON_PROPERTY_INNER_ERROR = "innerError";
  @javax.annotation.Nullable
  private InnerError innerError;

  public Error() { 
  }

  public Error code(@javax.annotation.Nullable ErrorCode code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ErrorCode getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(@javax.annotation.Nullable ErrorCode code) {
    this.code = code;
  }


  public Error details(@javax.annotation.Nullable List<Error> details) {
    this.details = details;
    return this;
  }

  public Error addDetailsItem(Error detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.details.add(detailsItem);
    return this;
  }

  /**
   * Additional supportive details regarding the error and/or expected policies.
   * @return details
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Error> getDetails() {
    return details;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(@javax.annotation.Nullable List<Error> details) {
    this.details = details;
  }


  public Error message(@javax.annotation.Nullable String message) {
    this.message = message;
    return this;
  }

  /**
   * High level error message.
   * @return message
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(@javax.annotation.Nullable String message) {
    this.message = message;
  }


  public Error target(@javax.annotation.Nullable String target) {
    this.target = target;
    return this;
  }

  /**
   * The source of the error.  For example it would be \&quot;documents\&quot; or \&quot;document id\&quot; in case of invalid document.
   * @return target
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTarget() {
    return target;
  }


  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTarget(@javax.annotation.Nullable String target) {
    this.target = target;
  }


  public Error innerError(@javax.annotation.Nullable InnerError innerError) {
    this.innerError = innerError;
    return this;
  }

  /**
   * Get innerError
   * @return innerError
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INNER_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public InnerError getInnerError() {
    return innerError;
  }


  @JsonProperty(JSON_PROPERTY_INNER_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInnerError(@javax.annotation.Nullable InnerError innerError) {
    this.innerError = innerError;
  }


  /**
   * Return true if this Error object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Error error = (Error) o;
    return Objects.equals(this.code, error.code) &&
        Objects.equals(this.details, error.details) &&
        Objects.equals(this.message, error.message) &&
        Objects.equals(this.target, error.target) &&
        Objects.equals(this.innerError, error.innerError);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, details, message, target, innerError);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Error {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    innerError: ").append(toIndentedString(innerError)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `code` to the URL query string
    if (getCode() != null) {
      joiner.add(String.format("%scode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCode()))));
    }

    // add `details` to the URL query string
    if (getDetails() != null) {
      for (int i = 0; i < getDetails().size(); i++) {
        if (getDetails().get(i) != null) {
          joiner.add(getDetails().get(i).toUrlQueryString(String.format("%sdetails%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `message` to the URL query string
    if (getMessage() != null) {
      joiner.add(String.format("%smessage%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMessage()))));
    }

    // add `target` to the URL query string
    if (getTarget() != null) {
      joiner.add(String.format("%starget%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTarget()))));
    }

    // add `innerError` to the URL query string
    if (getInnerError() != null) {
      joiner.add(getInnerError().toUrlQueryString(prefix + "innerError" + suffix));
    }

    return joiner.toString();
  }

    public static class Builder {

    private Error instance;

    public Builder() {
      this(new Error());
    }

    protected Builder(Error instance) {
      this.instance = instance;
    }

    public Error.Builder code(ErrorCode code) {
      this.instance.code = code;
      return this;
    }
    public Error.Builder details(List<Error> details) {
      this.instance.details = details;
      return this;
    }
    public Error.Builder message(String message) {
      this.instance.message = message;
      return this;
    }
    public Error.Builder target(String target) {
      this.instance.target = target;
      return this;
    }
    public Error.Builder innerError(InnerError innerError) {
      this.instance.innerError = innerError;
      return this;
    }


    /**
    * returns a built Error instance.
    *
    * The builder is not reusable.
    */
    public Error build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static Error.Builder builder() {
    return new Error.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public Error.Builder toBuilder() {
    return new Error.Builder()
      .code(getCode())
      .details(getDetails())
      .message(getMessage())
      .target(getTarget())
      .innerError(getInnerError());
  }

}

