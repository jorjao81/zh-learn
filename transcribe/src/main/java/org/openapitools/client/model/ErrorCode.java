/*
 * Speech Services API version 3.2
 * Speech Services API version 3.2.
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * High level error codes.
 */
public enum ErrorCode {
  
  INVALID_REQUEST("InvalidRequest"),
  
  INVALID_ARGUMENT("InvalidArgument"),
  
  INTERNAL_SERVER_ERROR("InternalServerError"),
  
  SERVICE_UNAVAILABLE("ServiceUnavailable"),
  
  NOT_FOUND("NotFound"),
  
  PIPELINE_ERROR("PipelineError"),
  
  CONFLICT("Conflict"),
  
  INTERNAL_COMMUNICATION_FAILED("InternalCommunicationFailed"),
  
  FORBIDDEN("Forbidden"),
  
  NOT_ALLOWED("NotAllowed"),
  
  UNAUTHORIZED("Unauthorized"),
  
  UNSUPPORTED_MEDIA_TYPE("UnsupportedMediaType"),
  
  TOO_MANY_REQUESTS("TooManyRequests"),
  
  UNPROCESSABLE_ENTITY("UnprocessableEntity");

  private String value;

  ErrorCode(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static ErrorCode fromValue(String value) {
    for (ErrorCode b : ErrorCode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

