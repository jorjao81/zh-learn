/*
 * Speech Services API version 3.2
 * Speech Services API version 3.2.
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * FileLinks
 */
@JsonPropertyOrder({
  FileLinks.JSON_PROPERTY_CONTENT_URL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-03T10:07:46.057250+01:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class FileLinks {
  public static final String JSON_PROPERTY_CONTENT_URL = "contentUrl";
  @javax.annotation.Nullable
  private URI contentUrl;

  public FileLinks() { 
  }

  @JsonCreator
  public FileLinks(
    @JsonProperty(JSON_PROPERTY_CONTENT_URL) URI contentUrl
  ) {
  this();
    this.contentUrl = contentUrl;
  }

  /**
   * The url to retrieve the content of this file.
   * @return contentUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public URI getContentUrl() {
    return contentUrl;
  }




  /**
   * Return true if this FileLinks object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileLinks fileLinks = (FileLinks) o;
    return Objects.equals(this.contentUrl, fileLinks.contentUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileLinks {\n");
    sb.append("    contentUrl: ").append(toIndentedString(contentUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `contentUrl` to the URL query string
    if (getContentUrl() != null) {
      joiner.add(String.format("%scontentUrl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getContentUrl()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private FileLinks instance;

    public Builder() {
      this(new FileLinks());
    }

    protected Builder(FileLinks instance) {
      this.instance = instance;
    }

    public FileLinks.Builder contentUrl(URI contentUrl) {
      this.instance.contentUrl = contentUrl;
      return this;
    }


    /**
    * returns a built FileLinks instance.
    *
    * The builder is not reusable.
    */
    public FileLinks build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static FileLinks.Builder builder() {
    return new FileLinks.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public FileLinks.Builder toBuilder() {
    return new FileLinks.Builder()
      .contentUrl(getContentUrl());
  }

}

