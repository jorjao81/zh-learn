/*
 * Speech Services API version 3.2
 * Speech Services API version 3.2.
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.ProjectLinks;
import org.openapitools.client.model.ProjectProperties;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Project
 */
@JsonPropertyOrder({
  Project.JSON_PROPERTY_LINKS,
  Project.JSON_PROPERTY_PROPERTIES,
  Project.JSON_PROPERTY_SELF,
  Project.JSON_PROPERTY_DISPLAY_NAME,
  Project.JSON_PROPERTY_DESCRIPTION,
  Project.JSON_PROPERTY_LOCALE,
  Project.JSON_PROPERTY_CUSTOM_PROPERTIES,
  Project.JSON_PROPERTY_CREATED_DATE_TIME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-03T10:07:46.057250+01:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class Project {
  public static final String JSON_PROPERTY_LINKS = "links";
  @javax.annotation.Nullable
  private ProjectLinks links;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  @javax.annotation.Nullable
  private ProjectProperties properties;

  public static final String JSON_PROPERTY_SELF = "self";
  @javax.annotation.Nullable
  private URI self;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  @javax.annotation.Nonnull
  private String displayName;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_LOCALE = "locale";
  @javax.annotation.Nonnull
  private String locale;

  public static final String JSON_PROPERTY_CUSTOM_PROPERTIES = "customProperties";
  @javax.annotation.Nullable
  private Map<String, String> customProperties = new HashMap<>();

  public static final String JSON_PROPERTY_CREATED_DATE_TIME = "createdDateTime";
  @javax.annotation.Nullable
  private OffsetDateTime createdDateTime;

  public Project() { 
  }

  @JsonCreator
  public Project(
    @JsonProperty(JSON_PROPERTY_SELF) URI self, 
    @JsonProperty(JSON_PROPERTY_CREATED_DATE_TIME) OffsetDateTime createdDateTime
  ) {
  this();
    this.self = self;
    this.createdDateTime = createdDateTime;
  }

  public Project links(@javax.annotation.Nullable ProjectLinks links) {
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ProjectLinks getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinks(@javax.annotation.Nullable ProjectLinks links) {
    this.links = links;
  }


  public Project properties(@javax.annotation.Nullable ProjectProperties properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ProjectProperties getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(@javax.annotation.Nullable ProjectProperties properties) {
    this.properties = properties;
  }


  /**
   * The location of this entity.
   * @return self
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SELF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public URI getSelf() {
    return self;
  }




  public Project displayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of the object.
   * @return displayName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
  }


  public Project description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the object.
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public Project locale(@javax.annotation.Nonnull String locale) {
    this.locale = locale;
    return this;
  }

  /**
   * The locale of the contained data.
   * @return locale
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLocale() {
    return locale;
  }


  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocale(@javax.annotation.Nonnull String locale) {
    this.locale = locale;
  }


  public Project customProperties(@javax.annotation.Nullable Map<String, String> customProperties) {
    this.customProperties = customProperties;
    return this;
  }

  public Project putCustomPropertiesItem(String key, String customPropertiesItem) {
    if (this.customProperties == null) {
      this.customProperties = new HashMap<>();
    }
    this.customProperties.put(key, customPropertiesItem);
    return this;
  }

  /**
   * The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum  allowed value length is 256 characters and the count of allowed entries is 10.
   * @return customProperties
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, String> getCustomProperties() {
    return customProperties;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomProperties(@javax.annotation.Nullable Map<String, String> customProperties) {
    this.customProperties = customProperties;
  }


  /**
   * The time-stamp when the object was created.  The time stamp is encoded as ISO 8601 date and time format  (\&quot;YYYY-MM-DDThh:mm:ssZ\&quot;, see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).
   * @return createdDateTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }




  /**
   * Return true if this Project object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Project project = (Project) o;
    return Objects.equals(this.links, project.links) &&
        Objects.equals(this.properties, project.properties) &&
        Objects.equals(this.self, project.self) &&
        Objects.equals(this.displayName, project.displayName) &&
        Objects.equals(this.description, project.description) &&
        Objects.equals(this.locale, project.locale) &&
        Objects.equals(this.customProperties, project.customProperties) &&
        Objects.equals(this.createdDateTime, project.createdDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, properties, self, displayName, description, locale, customProperties, createdDateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Project {\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    customProperties: ").append(toIndentedString(customProperties)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `links` to the URL query string
    if (getLinks() != null) {
      joiner.add(getLinks().toUrlQueryString(prefix + "links" + suffix));
    }

    // add `properties` to the URL query string
    if (getProperties() != null) {
      joiner.add(getProperties().toUrlQueryString(prefix + "properties" + suffix));
    }

    // add `self` to the URL query string
    if (getSelf() != null) {
      joiner.add(String.format("%sself%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSelf()))));
    }

    // add `displayName` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sdisplayName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayName()))));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `locale` to the URL query string
    if (getLocale() != null) {
      joiner.add(String.format("%slocale%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLocale()))));
    }

    // add `customProperties` to the URL query string
    if (getCustomProperties() != null) {
      for (String _key : getCustomProperties().keySet()) {
        joiner.add(String.format("%scustomProperties%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getCustomProperties().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getCustomProperties().get(_key)))));
      }
    }

    // add `createdDateTime` to the URL query string
    if (getCreatedDateTime() != null) {
      joiner.add(String.format("%screatedDateTime%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreatedDateTime()))));
    }

    return joiner.toString();
  }

    public static class Builder {

    private Project instance;

    public Builder() {
      this(new Project());
    }

    protected Builder(Project instance) {
      this.instance = instance;
    }

    public Project.Builder links(ProjectLinks links) {
      this.instance.links = links;
      return this;
    }
    public Project.Builder properties(ProjectProperties properties) {
      this.instance.properties = properties;
      return this;
    }
    public Project.Builder self(URI self) {
      this.instance.self = self;
      return this;
    }
    public Project.Builder displayName(String displayName) {
      this.instance.displayName = displayName;
      return this;
    }
    public Project.Builder description(String description) {
      this.instance.description = description;
      return this;
    }
    public Project.Builder locale(String locale) {
      this.instance.locale = locale;
      return this;
    }
    public Project.Builder customProperties(Map<String, String> customProperties) {
      this.instance.customProperties = customProperties;
      return this;
    }
    public Project.Builder createdDateTime(OffsetDateTime createdDateTime) {
      this.instance.createdDateTime = createdDateTime;
      return this;
    }


    /**
    * returns a built Project instance.
    *
    * The builder is not reusable.
    */
    public Project build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static Project.Builder builder() {
    return new Project.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public Project.Builder toBuilder() {
    return new Project.Builder()
      .links(getLinks())
      .properties(getProperties())
      .self(getSelf())
      .displayName(getDisplayName())
      .description(getDescription())
      .locale(getLocale())
      .customProperties(getCustomProperties())
      .createdDateTime(getCreatedDateTime());
  }

}

