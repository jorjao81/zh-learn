/*
 * Speech Services API version 3.2
 * Speech Services API version 3.2.
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.EntityError;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * EndpointProperties
 */
@JsonPropertyOrder({
  EndpointProperties.JSON_PROPERTY_LOGGING_ENABLED,
  EndpointProperties.JSON_PROPERTY_TIME_TO_LIVE,
  EndpointProperties.JSON_PROPERTY_EMAIL,
  EndpointProperties.JSON_PROPERTY_ERROR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-03T10:07:46.057250+01:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class EndpointProperties {
  public static final String JSON_PROPERTY_LOGGING_ENABLED = "loggingEnabled";
  @javax.annotation.Nullable
  private Boolean loggingEnabled;

  public static final String JSON_PROPERTY_TIME_TO_LIVE = "timeToLive";
  @javax.annotation.Nullable
  private String timeToLive;

  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nullable
  private String email;

  public static final String JSON_PROPERTY_ERROR = "error";
  @javax.annotation.Nullable
  private EntityError error;

  public EndpointProperties() { 
  }

  public EndpointProperties loggingEnabled(@javax.annotation.Nullable Boolean loggingEnabled) {
    this.loggingEnabled = loggingEnabled;
    return this;
  }

  /**
   * A value indicating whether content logging (audio &amp; transcriptions) is being used for a deployment.
   * @return loggingEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGGING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getLoggingEnabled() {
    return loggingEnabled;
  }


  @JsonProperty(JSON_PROPERTY_LOGGING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoggingEnabled(@javax.annotation.Nullable Boolean loggingEnabled) {
    this.loggingEnabled = loggingEnabled;
  }


  public EndpointProperties timeToLive(@javax.annotation.Nullable String timeToLive) {
    this.timeToLive = timeToLive;
    return this;
  }

  /**
   * How long the endpoint will be kept in the system. Once the endpoint reaches the time to live  after completion (successful or failed) it will be automatically deleted. Not setting this value or setting  to 0 will disable automatic deletion. The longest supported duration is 31 days.  The duration is encoded as ISO 8601 duration (\&quot;PnYnMnDTnHnMnS\&quot;, see https://en.wikipedia.org/wiki/ISO_8601#Durations).
   * @return timeToLive
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_TO_LIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTimeToLive() {
    return timeToLive;
  }


  @JsonProperty(JSON_PROPERTY_TIME_TO_LIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeToLive(@javax.annotation.Nullable String timeToLive) {
    this.timeToLive = timeToLive;
  }


  public EndpointProperties email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * The email address to send email notifications to in case the operation completes.  The value will be removed after successfully sending the email.
   * @return email
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public EndpointProperties error(@javax.annotation.Nullable EntityError error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EntityError getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(@javax.annotation.Nullable EntityError error) {
    this.error = error;
  }


  /**
   * Return true if this EndpointProperties object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndpointProperties endpointProperties = (EndpointProperties) o;
    return Objects.equals(this.loggingEnabled, endpointProperties.loggingEnabled) &&
        Objects.equals(this.timeToLive, endpointProperties.timeToLive) &&
        Objects.equals(this.email, endpointProperties.email) &&
        Objects.equals(this.error, endpointProperties.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loggingEnabled, timeToLive, email, error);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndpointProperties {\n");
    sb.append("    loggingEnabled: ").append(toIndentedString(loggingEnabled)).append("\n");
    sb.append("    timeToLive: ").append(toIndentedString(timeToLive)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `loggingEnabled` to the URL query string
    if (getLoggingEnabled() != null) {
      joiner.add(String.format("%sloggingEnabled%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLoggingEnabled()))));
    }

    // add `timeToLive` to the URL query string
    if (getTimeToLive() != null) {
      joiner.add(String.format("%stimeToLive%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTimeToLive()))));
    }

    // add `email` to the URL query string
    if (getEmail() != null) {
      joiner.add(String.format("%semail%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEmail()))));
    }

    // add `error` to the URL query string
    if (getError() != null) {
      joiner.add(getError().toUrlQueryString(prefix + "error" + suffix));
    }

    return joiner.toString();
  }

    public static class Builder {

    private EndpointProperties instance;

    public Builder() {
      this(new EndpointProperties());
    }

    protected Builder(EndpointProperties instance) {
      this.instance = instance;
    }

    public EndpointProperties.Builder loggingEnabled(Boolean loggingEnabled) {
      this.instance.loggingEnabled = loggingEnabled;
      return this;
    }
    public EndpointProperties.Builder timeToLive(String timeToLive) {
      this.instance.timeToLive = timeToLive;
      return this;
    }
    public EndpointProperties.Builder email(String email) {
      this.instance.email = email;
      return this;
    }
    public EndpointProperties.Builder error(EntityError error) {
      this.instance.error = error;
      return this;
    }


    /**
    * returns a built EndpointProperties instance.
    *
    * The builder is not reusable.
    */
    public EndpointProperties build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static EndpointProperties.Builder builder() {
    return new EndpointProperties.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public EndpointProperties.Builder toBuilder() {
    return new EndpointProperties.Builder()
      .loggingEnabled(getLoggingEnabled())
      .timeToLive(getTimeToLive())
      .email(getEmail())
      .error(getError());
  }

}

