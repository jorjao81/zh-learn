/*
 * Speech Services API version 3.2
 * Speech Services API version 3.2.
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.EditsSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * TokenErrorDetails
 */
@JsonPropertyOrder({
  TokenErrorDetails.JSON_PROPERTY_PUNCTUATION,
  TokenErrorDetails.JSON_PROPERTY_CAPITALIZATION,
  TokenErrorDetails.JSON_PROPERTY_INVERSE_TEXT_NORMALIZATION,
  TokenErrorDetails.JSON_PROPERTY_LEXICAL,
  TokenErrorDetails.JSON_PROPERTY_OTHERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-03T10:07:46.057250+01:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class TokenErrorDetails {
  public static final String JSON_PROPERTY_PUNCTUATION = "punctuation";
  @javax.annotation.Nullable
  private EditsSummary punctuation;

  public static final String JSON_PROPERTY_CAPITALIZATION = "capitalization";
  @javax.annotation.Nullable
  private EditsSummary capitalization;

  public static final String JSON_PROPERTY_INVERSE_TEXT_NORMALIZATION = "inverseTextNormalization";
  @javax.annotation.Nullable
  private EditsSummary inverseTextNormalization;

  public static final String JSON_PROPERTY_LEXICAL = "lexical";
  @javax.annotation.Nullable
  private EditsSummary lexical;

  public static final String JSON_PROPERTY_OTHERS = "others";
  @javax.annotation.Nullable
  private EditsSummary others;

  public TokenErrorDetails() { 
  }

  public TokenErrorDetails punctuation(@javax.annotation.Nullable EditsSummary punctuation) {
    this.punctuation = punctuation;
    return this;
  }

  /**
   * Get punctuation
   * @return punctuation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUNCTUATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EditsSummary getPunctuation() {
    return punctuation;
  }


  @JsonProperty(JSON_PROPERTY_PUNCTUATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPunctuation(@javax.annotation.Nullable EditsSummary punctuation) {
    this.punctuation = punctuation;
  }


  public TokenErrorDetails capitalization(@javax.annotation.Nullable EditsSummary capitalization) {
    this.capitalization = capitalization;
    return this;
  }

  /**
   * Get capitalization
   * @return capitalization
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAPITALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EditsSummary getCapitalization() {
    return capitalization;
  }


  @JsonProperty(JSON_PROPERTY_CAPITALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapitalization(@javax.annotation.Nullable EditsSummary capitalization) {
    this.capitalization = capitalization;
  }


  public TokenErrorDetails inverseTextNormalization(@javax.annotation.Nullable EditsSummary inverseTextNormalization) {
    this.inverseTextNormalization = inverseTextNormalization;
    return this;
  }

  /**
   * Get inverseTextNormalization
   * @return inverseTextNormalization
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVERSE_TEXT_NORMALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EditsSummary getInverseTextNormalization() {
    return inverseTextNormalization;
  }


  @JsonProperty(JSON_PROPERTY_INVERSE_TEXT_NORMALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInverseTextNormalization(@javax.annotation.Nullable EditsSummary inverseTextNormalization) {
    this.inverseTextNormalization = inverseTextNormalization;
  }


  public TokenErrorDetails lexical(@javax.annotation.Nullable EditsSummary lexical) {
    this.lexical = lexical;
    return this;
  }

  /**
   * Get lexical
   * @return lexical
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEXICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EditsSummary getLexical() {
    return lexical;
  }


  @JsonProperty(JSON_PROPERTY_LEXICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLexical(@javax.annotation.Nullable EditsSummary lexical) {
    this.lexical = lexical;
  }


  public TokenErrorDetails others(@javax.annotation.Nullable EditsSummary others) {
    this.others = others;
    return this;
  }

  /**
   * Get others
   * @return others
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OTHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EditsSummary getOthers() {
    return others;
  }


  @JsonProperty(JSON_PROPERTY_OTHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOthers(@javax.annotation.Nullable EditsSummary others) {
    this.others = others;
  }


  /**
   * Return true if this TokenErrorDetails object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenErrorDetails tokenErrorDetails = (TokenErrorDetails) o;
    return Objects.equals(this.punctuation, tokenErrorDetails.punctuation) &&
        Objects.equals(this.capitalization, tokenErrorDetails.capitalization) &&
        Objects.equals(this.inverseTextNormalization, tokenErrorDetails.inverseTextNormalization) &&
        Objects.equals(this.lexical, tokenErrorDetails.lexical) &&
        Objects.equals(this.others, tokenErrorDetails.others);
  }

  @Override
  public int hashCode() {
    return Objects.hash(punctuation, capitalization, inverseTextNormalization, lexical, others);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenErrorDetails {\n");
    sb.append("    punctuation: ").append(toIndentedString(punctuation)).append("\n");
    sb.append("    capitalization: ").append(toIndentedString(capitalization)).append("\n");
    sb.append("    inverseTextNormalization: ").append(toIndentedString(inverseTextNormalization)).append("\n");
    sb.append("    lexical: ").append(toIndentedString(lexical)).append("\n");
    sb.append("    others: ").append(toIndentedString(others)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `punctuation` to the URL query string
    if (getPunctuation() != null) {
      joiner.add(getPunctuation().toUrlQueryString(prefix + "punctuation" + suffix));
    }

    // add `capitalization` to the URL query string
    if (getCapitalization() != null) {
      joiner.add(getCapitalization().toUrlQueryString(prefix + "capitalization" + suffix));
    }

    // add `inverseTextNormalization` to the URL query string
    if (getInverseTextNormalization() != null) {
      joiner.add(getInverseTextNormalization().toUrlQueryString(prefix + "inverseTextNormalization" + suffix));
    }

    // add `lexical` to the URL query string
    if (getLexical() != null) {
      joiner.add(getLexical().toUrlQueryString(prefix + "lexical" + suffix));
    }

    // add `others` to the URL query string
    if (getOthers() != null) {
      joiner.add(getOthers().toUrlQueryString(prefix + "others" + suffix));
    }

    return joiner.toString();
  }

    public static class Builder {

    private TokenErrorDetails instance;

    public Builder() {
      this(new TokenErrorDetails());
    }

    protected Builder(TokenErrorDetails instance) {
      this.instance = instance;
    }

    public TokenErrorDetails.Builder punctuation(EditsSummary punctuation) {
      this.instance.punctuation = punctuation;
      return this;
    }
    public TokenErrorDetails.Builder capitalization(EditsSummary capitalization) {
      this.instance.capitalization = capitalization;
      return this;
    }
    public TokenErrorDetails.Builder inverseTextNormalization(EditsSummary inverseTextNormalization) {
      this.instance.inverseTextNormalization = inverseTextNormalization;
      return this;
    }
    public TokenErrorDetails.Builder lexical(EditsSummary lexical) {
      this.instance.lexical = lexical;
      return this;
    }
    public TokenErrorDetails.Builder others(EditsSummary others) {
      this.instance.others = others;
      return this;
    }


    /**
    * returns a built TokenErrorDetails instance.
    *
    * The builder is not reusable.
    */
    public TokenErrorDetails build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static TokenErrorDetails.Builder builder() {
    return new TokenErrorDetails.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public TokenErrorDetails.Builder toBuilder() {
    return new TokenErrorDetails.Builder()
      .punctuation(getPunctuation())
      .capitalization(getCapitalization())
      .inverseTextNormalization(getInverseTextNormalization())
      .lexical(getLexical())
      .others(getOthers());
  }

}

