/*
 * Speech Services API version 3.2
 * Speech Services API version 3.2.
 *
 * The version of the OpenAPI document: 3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.EntityError;
import org.openapitools.client.model.TokenErrorDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EvaluationProperties
 */
public class EvaluationPropertiesTest {
    private final EvaluationProperties model = new EvaluationProperties();

    /**
     * Model tests for EvaluationProperties
     */
    @Test
    public void testEvaluationProperties() {
        // TODO: test EvaluationProperties
    }

    /**
     * Test the property 'wordErrorRate1'
     */
    @Test
    public void wordErrorRate1Test() {
        // TODO: test wordErrorRate1
    }

    /**
     * Test the property 'sentenceErrorRate1'
     */
    @Test
    public void sentenceErrorRate1Test() {
        // TODO: test sentenceErrorRate1
    }

    /**
     * Test the property 'tokenErrorRate1'
     */
    @Test
    public void tokenErrorRate1Test() {
        // TODO: test tokenErrorRate1
    }

    /**
     * Test the property 'sentenceCount1'
     */
    @Test
    public void sentenceCount1Test() {
        // TODO: test sentenceCount1
    }

    /**
     * Test the property 'wordCount1'
     */
    @Test
    public void wordCount1Test() {
        // TODO: test wordCount1
    }

    /**
     * Test the property 'correctWordCount1'
     */
    @Test
    public void correctWordCount1Test() {
        // TODO: test correctWordCount1
    }

    /**
     * Test the property 'wordSubstitutionCount1'
     */
    @Test
    public void wordSubstitutionCount1Test() {
        // TODO: test wordSubstitutionCount1
    }

    /**
     * Test the property 'wordDeletionCount1'
     */
    @Test
    public void wordDeletionCount1Test() {
        // TODO: test wordDeletionCount1
    }

    /**
     * Test the property 'wordInsertionCount1'
     */
    @Test
    public void wordInsertionCount1Test() {
        // TODO: test wordInsertionCount1
    }

    /**
     * Test the property 'tokenCount1'
     */
    @Test
    public void tokenCount1Test() {
        // TODO: test tokenCount1
    }

    /**
     * Test the property 'correctTokenCount1'
     */
    @Test
    public void correctTokenCount1Test() {
        // TODO: test correctTokenCount1
    }

    /**
     * Test the property 'tokenSubstitutionCount1'
     */
    @Test
    public void tokenSubstitutionCount1Test() {
        // TODO: test tokenSubstitutionCount1
    }

    /**
     * Test the property 'tokenDeletionCount1'
     */
    @Test
    public void tokenDeletionCount1Test() {
        // TODO: test tokenDeletionCount1
    }

    /**
     * Test the property 'tokenInsertionCount1'
     */
    @Test
    public void tokenInsertionCount1Test() {
        // TODO: test tokenInsertionCount1
    }

    /**
     * Test the property 'tokenErrors1'
     */
    @Test
    public void tokenErrors1Test() {
        // TODO: test tokenErrors1
    }

    /**
     * Test the property 'wordErrorRate2'
     */
    @Test
    public void wordErrorRate2Test() {
        // TODO: test wordErrorRate2
    }

    /**
     * Test the property 'sentenceErrorRate2'
     */
    @Test
    public void sentenceErrorRate2Test() {
        // TODO: test sentenceErrorRate2
    }

    /**
     * Test the property 'tokenErrorRate2'
     */
    @Test
    public void tokenErrorRate2Test() {
        // TODO: test tokenErrorRate2
    }

    /**
     * Test the property 'sentenceCount2'
     */
    @Test
    public void sentenceCount2Test() {
        // TODO: test sentenceCount2
    }

    /**
     * Test the property 'wordCount2'
     */
    @Test
    public void wordCount2Test() {
        // TODO: test wordCount2
    }

    /**
     * Test the property 'correctWordCount2'
     */
    @Test
    public void correctWordCount2Test() {
        // TODO: test correctWordCount2
    }

    /**
     * Test the property 'wordSubstitutionCount2'
     */
    @Test
    public void wordSubstitutionCount2Test() {
        // TODO: test wordSubstitutionCount2
    }

    /**
     * Test the property 'wordDeletionCount2'
     */
    @Test
    public void wordDeletionCount2Test() {
        // TODO: test wordDeletionCount2
    }

    /**
     * Test the property 'wordInsertionCount2'
     */
    @Test
    public void wordInsertionCount2Test() {
        // TODO: test wordInsertionCount2
    }

    /**
     * Test the property 'tokenCount2'
     */
    @Test
    public void tokenCount2Test() {
        // TODO: test tokenCount2
    }

    /**
     * Test the property 'correctTokenCount2'
     */
    @Test
    public void correctTokenCount2Test() {
        // TODO: test correctTokenCount2
    }

    /**
     * Test the property 'tokenSubstitutionCount2'
     */
    @Test
    public void tokenSubstitutionCount2Test() {
        // TODO: test tokenSubstitutionCount2
    }

    /**
     * Test the property 'tokenDeletionCount2'
     */
    @Test
    public void tokenDeletionCount2Test() {
        // TODO: test tokenDeletionCount2
    }

    /**
     * Test the property 'tokenInsertionCount2'
     */
    @Test
    public void tokenInsertionCount2Test() {
        // TODO: test tokenInsertionCount2
    }

    /**
     * Test the property 'tokenErrors2'
     */
    @Test
    public void tokenErrors2Test() {
        // TODO: test tokenErrors2
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'error'
     */
    @Test
    public void errorTest() {
        // TODO: test error
    }

}
